from PIL import Image, ImageEnhance, ImageFilter
import pytesseract

def process_image(raw_input):
	nextout = raw_input
	outer = []
	for i in nextout:
		if i > 255:
			i = 255
		outer.append(i)
		outer.append(i)
		outer.append(i)

	outer = bytes(outer)
	img = Image.frombytes('RGB', (28,28), outer)
	img.save("test.png")

	text = pytesseract.image_to_string(Image.open("test.png"))
	return text

def recognize_handwriting(tc):
	res = []

	pictures_to_read = tc["question"]
	for pic in pictures_to_read:
		res.append(process_image(pic))

	print(res)
	return res





# test_case = {"question":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,102,143,151,240,272,140,107,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,146,244,248,252,274,246,218,187,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,158,251,246,218,199,138,174,232,232,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,239,265,236,32,13,0,5,181,255,137,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,221,229,24,0,0,0,123,253,221,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,20,0,0,0,0,207,279,257,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123,266,278,197,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,269,236,243,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,125,250,243,142,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,175,214,234,154,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,244,242,261,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,222,260,247,150,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,227,288,185,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,182,268,267,142,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,260,245,182,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,226,256,269,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,247,291,45,23,18,20,20,6,0,5,21,20,32,134,136,153,164,10,0,0,0,0,0,0,0,0,0,243,230,220,238,227,220,242,253,165,164,176,272,268,268,289,244,267,236,124,0,0,0,0,0,0,0,0,0,150,219,230,226,231,265,289,261,269,282,219,285,284,266,278,180,113,120,57,0,0,0,0,0,0,0,0,0,0,101,115,116,138,183,233,278,285,150,126,119,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,102,143,151,240,272,140,107,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,146,244,248,252,274,246,218,187,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,158,251,246,218,199,138,174,232,232,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,239,265,236,32,13,0,5,181,255,137,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,221,229,24,0,0,0,123,253,221,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,20,0,0,0,0,207,279,257,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123,266,278,197,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,269,236,243,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,125,250,243,142,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,175,214,234,154,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,244,242,261,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,222,260,247,150,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,227,288,185,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,182,268,267,142,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,260,245,182,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,226,256,269,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,247,291,45,23,18,20,20,6,0,5,21,20,32,134,136,153,164,10,0,0,0,0,0,0,0,0,0,243,230,220,238,227,220,242,253,165,164,176,272,268,268,289,244,267,236,124,0,0,0,0,0,0,0,0,0,150,219,230,226,231,265,289,261,269,282,219,285,284,266,278,180,113,120,57,0,0,0,0,0,0,0,0,0,0,101,115,116,138,183,233,278,285,150,126,119,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]]}

# print(solve(test_case))